#!/usr/bin/python 
#+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
#|R|a|s|p|b|e|r|r|y|P|i|.|c|o|m|.|t|w|
#+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
# Copyright (c) 2016, raspberrypi.com.tw
# All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# move_car.py
# control car with argument [w=forward/a=left/s=backward/d=right]
# usage: sudo python move_car.py [w/a/s/d]
#
# Author : sosorry
# Date   : 08/01/2015

from gtts import gTTS
import RPi.GPIO as GPIO
import time
import os
import readchar
import speech_recognition as sr
#obtain audio from the microphone
r=sr.Recognizer()

Motor_R1_Pin = 16
Motor_R2_Pin = 18
Motor_L1_Pin = 15
Motor_L2_Pin = 13
t = 0.5


GPIO.setmode(GPIO.BOARD)
GPIO.setup(Motor_R1_Pin, GPIO.OUT, initial=GPIO.LOW)
GPIO.setup(Motor_R2_Pin, GPIO.OUT, initial=GPIO.LOW)
GPIO.setup(Motor_L1_Pin, GPIO.OUT, initial=GPIO.LOW)
GPIO.setup(Motor_L2_Pin, GPIO.OUT, initial=GPIO.LOW)


def stop():
    GPIO.output(Motor_R1_Pin, False)
    GPIO.output(Motor_R2_Pin, False)
    GPIO.output(Motor_L1_Pin, False)
    GPIO.output(Motor_L2_Pin, False)


def forward():
    GPIO.output(Motor_R1_Pin, True)
    GPIO.output(Motor_R2_Pin, False)
    GPIO.output(Motor_L1_Pin, True)
    GPIO.output(Motor_L2_Pin, False)
    time.sleep(t)
    stop()


def backward():
    GPIO.output(Motor_R1_Pin, False)
    GPIO.output(Motor_R2_Pin, True)
    GPIO.output(Motor_L1_Pin, False)
    GPIO.output(Motor_L2_Pin, True)
    time.sleep(t)
    stop()


def turnRight():
    GPIO.output(Motor_R1_Pin, False)
    GPIO.output(Motor_R2_Pin, False)
    GPIO.output(Motor_L1_Pin, True)
    GPIO.output(Motor_L2_Pin, False)
    time.sleep(t)
    stop()

def turnLeft():
    GPIO.output(Motor_R1_Pin, True)
    GPIO.output(Motor_R2_Pin, False)
    GPIO.output(Motor_L1_Pin, False)
    GPIO.output(Motor_L2_Pin, False)
    time.sleep(t)
    stop()


if __name__ == "__main__":

#    print("Press 'q' to quit...")
#    os.system('omxplayer --vol -100  -o local -p 私奔到月球.mp3 > /dev/null 2>&1')

    while True:

        with sr.Microphone(device_index=2,sample_rate=48000) as source:
            print("Please wait. Calibrating microphone...")
#listen for 1 seconds and create the ambient noise energy level
#            r.adjust_for_ambient_noise(source, duration=1)
            r.energy_threshold=4000
            print("Say something!")
            audio=r.listen(source)
# recognize speech using Google Speech Recognition

        try:
            str = ""

            print("Google Speech Recognition thinks you said:")
            words = r.recognize_google(audio, language='zh-TW')
            print(words)

            if "前進" in words:
                forward()
                s = "前進"
            elif "左轉" in words:
                turnLeft()
                s = "左轉"
            elif "右轉" in words:
                turnRight()
                s = "右轉"
            elif "後退" in words:
                backward()
                s = "後退"
            elif "結束" in words:
                print("\nQuit")
                GPIO.cleanup()
                quit()
        except sr.UnknownValueError:
            print("Google Speech Recognition could not understand audio")
        except sr.RequestError as e:
            print("No response from Google Speech Recognition service: {0}".format(e))


"""
        ch = readchar.readkey()

        if ch == 'w':
            forward()

        elif ch == 's':
            backward()

        elif ch == 'd':
            turnRight()

        elif ch == 'a':
            turnLeft()

        elif ch == 'q':
            print("\nQuit")
            GPIO.cleanup()
            quit()
"""
